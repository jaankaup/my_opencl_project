// The tritable.
__constant char16 triTable[256] = {
 {255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255},
 {  0 ,    8 ,    3 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255},
 {  0 ,    1 ,    9 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255},
 {  1 ,    8 ,    3 ,    9 ,    8 ,    1 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255},
 {  1 ,    2 ,   10 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255},
 {  0 ,    8 ,    3 ,    1 ,    2 ,   10 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255},
 {  9 ,    2 ,   10 ,    0 ,    2 ,    9 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255},
 {  2 ,    8 ,    3 ,    2 ,   10 ,    8 ,   10 ,    9 ,    8 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255},
 {  3 ,   11 ,    2 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255},
 {  0 ,   11 ,    2 ,    8 ,   11 ,    0 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255},
 {  1 ,    9 ,    0 ,    2 ,    3 ,   11 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255},
 {  1 ,   11 ,    2 ,    1 ,    9 ,   11 ,    9 ,    8 ,   11 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255},
 {  3 ,   10 ,    1 ,   11 ,   10 ,    3 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255},
 {  0 ,   10 ,    1 ,    0 ,    8 ,   10 ,    8 ,   11 ,   10 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255},
 {  3 ,    9 ,    0 ,    3 ,   11 ,    9 ,   11 ,   10 ,    9 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255},
 {  9 ,    8 ,   10 ,   10 ,    8 ,   11 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255},
 {  4 ,    7 ,    8 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255},
 {  4 ,    3 ,    0 ,    7 ,    3 ,    4 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255},
 {  0 ,    1 ,    9 ,    8 ,    4 ,    7 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255},
 {  4 ,    1 ,    9 ,    4 ,    7 ,    1 ,    7 ,    3 ,    1 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255},
 {  1 ,    2 ,   10 ,    8 ,    4 ,    7 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255},
 {  3 ,    4 ,    7 ,    3 ,    0 ,    4 ,    1 ,    2 ,   10 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255},
 {  9 ,    2 ,   10 ,    9 ,    0 ,    2 ,    8 ,    4 ,    7 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255},
 {  2 ,   10 ,    9 ,    2 ,    9 ,    7 ,    2 ,    7 ,    3 ,    7 ,    9 ,    4 ,  255 ,  255 ,  255 ,  255},
 {  8 ,    4 ,    7 ,    3 ,   11 ,    2 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255},
 { 11 ,    4 ,    7 ,   11 ,    2 ,    4 ,    2 ,    0 ,    4 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255},
 {  9 ,    0 ,    1 ,    8 ,    4 ,    7 ,    2 ,    3 ,   11 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255},
 {  4 ,    7 ,   11 ,    9 ,    4 ,   11 ,    9 ,   11 ,    2 ,    9 ,    2 ,    1 ,  255 ,  255 ,  255 ,  255},
 {  3 ,   10 ,    1 ,    3 ,   11 ,   10 ,    7 ,    8 ,    4 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255},
 {  1 ,   11 ,   10 ,    1 ,    4 ,   11 ,    1 ,    0 ,    4 ,    7 ,   11 ,    4 ,  255 ,  255 ,  255 ,  255},
 {  4 ,    7 ,    8 ,    9 ,    0 ,   11 ,    9 ,   11 ,   10 ,   11 ,    0 ,    3 ,  255 ,  255 ,  255 ,  255},
 {  4 ,    7 ,   11 ,    4 ,   11 ,    9 ,    9 ,   11 ,   10 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255},
 {  9 ,    5 ,    4 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255},
 {  9 ,    5 ,    4 ,    0 ,    8 ,    3 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255},
 {  0 ,    5 ,    4 ,    1 ,    5 ,    0 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255},
 {  8 ,    5 ,    4 ,    8 ,    3 ,    5 ,    3 ,    1 ,    5 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255},
 {  1 ,    2 ,   10 ,    9 ,    5 ,    4 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255},
 {  3 ,    0 ,    8 ,    1 ,    2 ,   10 ,    4 ,    9 ,    5 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255},
 {  5 ,    2 ,   10 ,    5 ,    4 ,    2 ,    4 ,    0 ,    2 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255},
 {  2 ,   10 ,    5 ,    3 ,    2 ,    5 ,    3 ,    5 ,    4 ,    3 ,    4 ,    8 ,  255 ,  255 ,  255 ,  255},
 {  9 ,    5 ,    4 ,    2 ,    3 ,   11 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255},
 {  0 ,   11 ,    2 ,    0 ,    8 ,   11 ,    4 ,    9 ,    5 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255},
 {  0 ,    5 ,    4 ,    0 ,    1 ,    5 ,    2 ,    3 ,   11 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255},
 {  2 ,    1 ,    5 ,    2 ,    5 ,    8 ,    2 ,    8 ,   11 ,    4 ,    8 ,    5 ,  255 ,  255 ,  255 ,  255},
 { 10 ,    3 ,   11 ,   10 ,    1 ,    3 ,    9 ,    5 ,    4 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255},
 {  4 ,    9 ,    5 ,    0 ,    8 ,    1 ,    8 ,   10 ,    1 ,    8 ,   11 ,   10 ,  255 ,  255 ,  255 ,  255},
 {  5 ,    4 ,    0 ,    5 ,    0 ,   11 ,    5 ,   11 ,   10 ,   11 ,    0 ,    3 ,  255 ,  255 ,  255 ,  255},
 {  5 ,    4 ,    8 ,    5 ,    8 ,   10 ,   10 ,    8 ,   11 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255},
 {  9 ,    7 ,    8 ,    5 ,    7 ,    9 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255},
 {  9 ,    3 ,    0 ,    9 ,    5 ,    3 ,    5 ,    7 ,    3 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255},
 {  0 ,    7 ,    8 ,    0 ,    1 ,    7 ,    1 ,    5 ,    7 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255},
 {  1 ,    5 ,    3 ,    3 ,    5 ,    7 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255},
 {  9 ,    7 ,    8 ,    9 ,    5 ,    7 ,   10 ,    1 ,    2 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255},
 { 10 ,    1 ,    2 ,    9 ,    5 ,    0 ,    5 ,    3 ,    0 ,    5 ,    7 ,    3 ,  255 ,  255 ,  255 ,  255},
 {  8 ,    0 ,    2 ,    8 ,    2 ,    5 ,    8 ,    5 ,    7 ,   10 ,    5 ,    2 ,  255 ,  255 ,  255 ,  255},
 {  2 ,   10 ,    5 ,    2 ,    5 ,    3 ,    3 ,    5 ,    7 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255},
 {  7 ,    9 ,    5 ,    7 ,    8 ,    9 ,    3 ,   11 ,    2 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255},
 {  9 ,    5 ,    7 ,    9 ,    7 ,    2 ,    9 ,    2 ,    0 ,    2 ,    7 ,   11 ,  255 ,  255 ,  255 ,  255},
 {  2 ,    3 ,   11 ,    0 ,    1 ,    8 ,    1 ,    7 ,    8 ,    1 ,    5 ,    7 ,  255 ,  255 ,  255 ,  255},
 { 11 ,    2 ,    1 ,   11 ,    1 ,    7 ,    7 ,    1 ,    5 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255},
 {  9 ,    5 ,    8 ,    8 ,    5 ,    7 ,   10 ,    1 ,    3 ,   10 ,    3 ,   11 ,  255 ,  255 ,  255 ,  255},
 {  5 ,    7 ,    0 ,    5 ,    0 ,    9 ,    7 ,   11 ,    0 ,    1 ,    0 ,   10 ,   11 ,   10 ,    0 ,  255},
 { 11 ,   10 ,    0 ,   11 ,    0 ,    3 ,   10 ,    5 ,    0 ,    8 ,    0 ,    7 ,    5 ,    7 ,    0 ,  255},
 { 11 ,   10 ,    5 ,    7 ,   11 ,    5 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255},
 { 10 ,    6 ,    5 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255},
 {  0 ,    8 ,    3 ,    5 ,   10 ,    6 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255},
 {  9 ,    0 ,    1 ,    5 ,   10 ,    6 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255},
 {  1 ,    8 ,    3 ,    1 ,    9 ,    8 ,    5 ,   10 ,    6 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255},
 {  1 ,    6 ,    5 ,    2 ,    6 ,    1 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255},
 {  1 ,    6 ,    5 ,    1 ,    2 ,    6 ,    3 ,    0 ,    8 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255},
 {  9 ,    6 ,    5 ,    9 ,    0 ,    6 ,    0 ,    2 ,    6 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255},
 {  5 ,    9 ,    8 ,    5 ,    8 ,    2 ,    5 ,    2 ,    6 ,    3 ,    2 ,    8 ,  255 ,  255 ,  255 ,  255},
 {  2 ,    3 ,   11 ,   10 ,    6 ,    5 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255},
 { 11 ,    0 ,    8 ,   11 ,    2 ,    0 ,   10 ,    6 ,    5 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255},
 {  0 ,    1 ,    9 ,    2 ,    3 ,   11 ,    5 ,   10 ,    6 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255},
 {  5 ,   10 ,    6 ,    1 ,    9 ,    2 ,    9 ,   11 ,    2 ,    9 ,    8 ,   11 ,  255 ,  255 ,  255 ,  255},
 {  6 ,    3 ,   11 ,    6 ,    5 ,    3 ,    5 ,    1 ,    3 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255},
 {  0 ,    8 ,   11 ,    0 ,   11 ,    5 ,    0 ,    5 ,    1 ,    5 ,   11 ,    6 ,  255 ,  255 ,  255 ,  255},
 {  3 ,   11 ,    6 ,    0 ,    3 ,    6 ,    0 ,    6 ,    5 ,    0 ,    5 ,    9 ,  255 ,  255 ,  255 ,  255},
 {  6 ,    5 ,    9 ,    6 ,    9 ,   11 ,   11 ,    9 ,    8 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255},
 {  5 ,   10 ,    6 ,    4 ,    7 ,    8 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255},
 {  4 ,    3 ,    0 ,    4 ,    7 ,    3 ,    6 ,    5 ,   10 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255},
 {  1 ,    9 ,    0 ,    5 ,   10 ,    6 ,    8 ,    4 ,    7 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255},
 { 10 ,    6 ,    5 ,    1 ,    9 ,    7 ,    1 ,    7 ,    3 ,    7 ,    9 ,    4 ,  255 ,  255 ,  255 ,  255},
 {  6 ,    1 ,    2 ,    6 ,    5 ,    1 ,    4 ,    7 ,    8 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255},
 {  1 ,    2 ,    5 ,    5 ,    2 ,    6 ,    3 ,    0 ,    4 ,    3 ,    4 ,    7 ,  255 ,  255 ,  255 ,  255},
 {  8 ,    4 ,    7 ,    9 ,    0 ,    5 ,    0 ,    6 ,    5 ,    0 ,    2 ,    6 ,  255 ,  255 ,  255 ,  255},
 {  7 ,    3 ,    9 ,    7 ,    9 ,    4 ,    3 ,    2 ,    9 ,    5 ,    9 ,    6 ,    2 ,    6 ,    9 ,  255},
 {  3 ,   11 ,    2 ,    7 ,    8 ,    4 ,   10 ,    6 ,    5 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255},
 {  5 ,   10 ,    6 ,    4 ,    7 ,    2 ,    4 ,    2 ,    0 ,    2 ,    7 ,   11 ,  255 ,  255 ,  255 ,  255},
 {  0 ,    1 ,    9 ,    4 ,    7 ,    8 ,    2 ,    3 ,   11 ,    5 ,   10 ,    6 ,  255 ,  255 ,  255 ,  255},
 {  9 ,    2 ,    1 ,    9 ,   11 ,    2 ,    9 ,    4 ,   11 ,    7 ,   11 ,    4 ,    5 ,   10 ,    6 ,  255},
 {  8 ,    4 ,    7 ,    3 ,   11 ,    5 ,    3 ,    5 ,    1 ,    5 ,   11 ,    6 ,  255 ,  255 ,  255 ,  255},
 {  5 ,    1 ,   11 ,    5 ,   11 ,    6 ,    1 ,    0 ,   11 ,    7 ,   11 ,    4 ,    0 ,    4 ,   11 ,  255},
 {  0 ,    5 ,    9 ,    0 ,    6 ,    5 ,    0 ,    3 ,    6 ,   11 ,    6 ,    3 ,    8 ,    4 ,    7 ,  255},
 {  6 ,    5 ,    9 ,    6 ,    9 ,   11 ,    4 ,    7 ,    9 ,    7 ,   11 ,    9 ,  255 ,  255 ,  255 ,  255},
 { 10 ,    4 ,    9 ,    6 ,    4 ,   10 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255},
 {  4 ,   10 ,    6 ,    4 ,    9 ,   10 ,    0 ,    8 ,    3 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255},
 { 10 ,    0 ,    1 ,   10 ,    6 ,    0 ,    6 ,    4 ,    0 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255},
 {  8 ,    3 ,    1 ,    8 ,    1 ,    6 ,    8 ,    6 ,    4 ,    6 ,    1 ,   10 ,  255 ,  255 ,  255 ,  255},
 {  1 ,    4 ,    9 ,    1 ,    2 ,    4 ,    2 ,    6 ,    4 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255},
 {  3 ,    0 ,    8 ,    1 ,    2 ,    9 ,    2 ,    4 ,    9 ,    2 ,    6 ,    4 ,  255 ,  255 ,  255 ,  255},
 {  0 ,    2 ,    4 ,    4 ,    2 ,    6 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255},
 {  8 ,    3 ,    2 ,    8 ,    2 ,    4 ,    4 ,    2 ,    6 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255},
 { 10 ,    4 ,    9 ,   10 ,    6 ,    4 ,   11 ,    2 ,    3 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255},
 {  0 ,    8 ,    2 ,    2 ,    8 ,   11 ,    4 ,    9 ,   10 ,    4 ,   10 ,    6 ,  255 ,  255 ,  255 ,  255},
 {  3 ,   11 ,    2 ,    0 ,    1 ,    6 ,    0 ,    6 ,    4 ,    6 ,    1 ,   10 ,  255 ,  255 ,  255 ,  255},
 {  6 ,    4 ,    1 ,    6 ,    1 ,   10 ,    4 ,    8 ,    1 ,    2 ,    1 ,   11 ,    8 ,   11 ,    1 ,  255},
 {  9 ,    6 ,    4 ,    9 ,    3 ,    6 ,    9 ,    1 ,    3 ,   11 ,    6 ,    3 ,  255 ,  255 ,  255 ,  255},
 {  8 ,   11 ,    1 ,    8 ,    1 ,    0 ,   11 ,    6 ,    1 ,    9 ,    1 ,    4 ,    6 ,    4 ,    1 ,  255},
 {  3 ,   11 ,    6 ,    3 ,    6 ,    0 ,    0 ,    6 ,    4 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255},
 {  6 ,    4 ,    8 ,   11 ,    6 ,    8 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255},
 {  7 ,   10 ,    6 ,    7 ,    8 ,   10 ,    8 ,    9 ,   10 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255},
 {  0 ,    7 ,    3 ,    0 ,   10 ,    7 ,    0 ,    9 ,   10 ,    6 ,    7 ,   10 ,  255 ,  255 ,  255 ,  255},
 { 10 ,    6 ,    7 ,    1 ,   10 ,    7 ,    1 ,    7 ,    8 ,    1 ,    8 ,    0 ,  255 ,  255 ,  255 ,  255},
 { 10 ,    6 ,    7 ,   10 ,    7 ,    1 ,    1 ,    7 ,    3 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255},
 {  1 ,    2 ,    6 ,    1 ,    6 ,    8 ,    1 ,    8 ,    9 ,    8 ,    6 ,    7 ,  255 ,  255 ,  255 ,  255},
 {  2 ,    6 ,    9 ,    2 ,    9 ,    1 ,    6 ,    7 ,    9 ,    0 ,    9 ,    3 ,    7 ,    3 ,    9 ,  255},
 {  7 ,    8 ,    0 ,    7 ,    0 ,    6 ,    6 ,    0 ,    2 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255},
 {  7 ,    3 ,    2 ,    6 ,    7 ,    2 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255},
 {  2 ,    3 ,   11 ,   10 ,    6 ,    8 ,   10 ,    8 ,    9 ,    8 ,    6 ,    7 ,  255 ,  255 ,  255 ,  255},
 {  2 ,    0 ,    7 ,    2 ,    7 ,   11 ,    0 ,    9 ,    7 ,    6 ,    7 ,   10 ,    9 ,   10 ,    7 ,  255},
 {  1 ,    8 ,    0 ,    1 ,    7 ,    8 ,    1 ,   10 ,    7 ,    6 ,    7 ,   10 ,    2 ,    3 ,   11 ,  255},
 { 11 ,    2 ,    1 ,   11 ,    1 ,    7 ,   10 ,    6 ,    1 ,    6 ,    7 ,    1 ,  255 ,  255 ,  255 ,  255},
 {  8 ,    9 ,    6 ,    8 ,    6 ,    7 ,    9 ,    1 ,    6 ,   11 ,    6 ,    3 ,    1 ,    3 ,    6 ,  255},
 {  0 ,    9 ,    1 ,   11 ,    6 ,    7 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255},
 {  7 ,    8 ,    0 ,    7 ,    0 ,    6 ,    3 ,   11 ,    0 ,   11 ,    6 ,    0 ,  255 ,  255 ,  255 ,  255},
 {  7 ,   11 ,    6 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255},
 {  7 ,    6 ,   11 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255},
 {  3 ,    0 ,    8 ,   11 ,    7 ,    6 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255},
 {  0 ,    1 ,    9 ,   11 ,    7 ,    6 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255},
 {  8 ,    1 ,    9 ,    8 ,    3 ,    1 ,   11 ,    7 ,    6 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255},
 { 10 ,    1 ,    2 ,    6 ,   11 ,    7 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255},
 {  1 ,    2 ,   10 ,    3 ,    0 ,    8 ,    6 ,   11 ,    7 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255},
 {  2 ,    9 ,    0 ,    2 ,   10 ,    9 ,    6 ,   11 ,    7 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255},
 {  6 ,   11 ,    7 ,    2 ,   10 ,    3 ,   10 ,    8 ,    3 ,   10 ,    9 ,    8 ,  255 ,  255 ,  255 ,  255},
 {  7 ,    2 ,    3 ,    6 ,    2 ,    7 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255},
 {  7 ,    0 ,    8 ,    7 ,    6 ,    0 ,    6 ,    2 ,    0 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255},
 {  2 ,    7 ,    6 ,    2 ,    3 ,    7 ,    0 ,    1 ,    9 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255},
 {  1 ,    6 ,    2 ,    1 ,    8 ,    6 ,    1 ,    9 ,    8 ,    8 ,    7 ,    6 ,  255 ,  255 ,  255 ,  255},
 { 10 ,    7 ,    6 ,   10 ,    1 ,    7 ,    1 ,    3 ,    7 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255},
 { 10 ,    7 ,    6 ,    1 ,    7 ,   10 ,    1 ,    8 ,    7 ,    1 ,    0 ,    8 ,  255 ,  255 ,  255 ,  255},
 {  0 ,    3 ,    7 ,    0 ,    7 ,   10 ,    0 ,   10 ,    9 ,    6 ,   10 ,    7 ,  255 ,  255 ,  255 ,  255},
 {  7 ,    6 ,   10 ,    7 ,   10 ,    8 ,    8 ,   10 ,    9 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255},
 {  6 ,    8 ,    4 ,   11 ,    8 ,    6 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255},
 {  3 ,    6 ,   11 ,    3 ,    0 ,    6 ,    0 ,    4 ,    6 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255},
 {  8 ,    6 ,   11 ,    8 ,    4 ,    6 ,    9 ,    0 ,    1 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255},
 {  9 ,    4 ,    6 ,    9 ,    6 ,    3 ,    9 ,    3 ,    1 ,   11 ,    3 ,    6 ,  255 ,  255 ,  255 ,  255},
 {  6 ,    8 ,    4 ,    6 ,   11 ,    8 ,    2 ,   10 ,    1 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255},
 {  1 ,    2 ,   10 ,    3 ,    0 ,   11 ,    0 ,    6 ,   11 ,    0 ,    4 ,    6 ,  255 ,  255 ,  255 ,  255},
 {  4 ,   11 ,    8 ,    4 ,    6 ,   11 ,    0 ,    2 ,    9 ,    2 ,   10 ,    9 ,  255 ,  255 ,  255 ,  255},
 { 10 ,    9 ,    3 ,   10 ,    3 ,    2 ,    9 ,    4 ,    3 ,   11 ,    3 ,    6 ,    4 ,    6 ,    3 ,  255},
 {  8 ,    2 ,    3 ,    8 ,    4 ,    2 ,    4 ,    6 ,    2 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255},
 {  0 ,    4 ,    2 ,    4 ,    6 ,    2 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255},
 {  1 ,    9 ,    0 ,    2 ,    3 ,    4 ,    2 ,    4 ,    6 ,    4 ,    3 ,    8 ,  255 ,  255 ,  255 ,  255},
 {  1 ,    9 ,    4 ,    1 ,    4 ,    2 ,    2 ,    4 ,    6 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255},
 {  8 ,    1 ,    3 ,    8 ,    6 ,    1 ,    8 ,    4 ,    6 ,    6 ,   10 ,    1 ,  255 ,  255 ,  255 ,  255},
 { 10 ,    1 ,    0 ,   10 ,    0 ,    6 ,    6 ,    0 ,    4 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255},
 {  4 ,    6 ,    3 ,    4 ,    3 ,    8 ,    6 ,   10 ,    3 ,    0 ,    3 ,    9 ,   10 ,    9 ,    3 ,  255},
 { 10 ,    9 ,    4 ,    6 ,   10 ,    4 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255},
 {  4 ,    9 ,    5 ,    7 ,    6 ,   11 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255},
 {  0 ,    8 ,    3 ,    4 ,    9 ,    5 ,   11 ,    7 ,    6 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255},
 {  5 ,    0 ,    1 ,    5 ,    4 ,    0 ,    7 ,    6 ,   11 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255},
 { 11 ,    7 ,    6 ,    8 ,    3 ,    4 ,    3 ,    5 ,    4 ,    3 ,    1 ,    5 ,  255 ,  255 ,  255 ,  255},
 {  9 ,    5 ,    4 ,   10 ,    1 ,    2 ,    7 ,    6 ,   11 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255},
 {  6 ,   11 ,    7 ,    1 ,    2 ,   10 ,    0 ,    8 ,    3 ,    4 ,    9 ,    5 ,  255 ,  255 ,  255 ,  255},
 {  7 ,    6 ,   11 ,    5 ,    4 ,   10 ,    4 ,    2 ,   10 ,    4 ,    0 ,    2 ,  255 ,  255 ,  255 ,  255},
 {  3 ,    4 ,    8 ,    3 ,    5 ,    4 ,    3 ,    2 ,    5 ,   10 ,    5 ,    2 ,   11 ,    7 ,    6 ,  255},
 {  7 ,    2 ,    3 ,    7 ,    6 ,    2 ,    5 ,    4 ,    9 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255},
 {  9 ,    5 ,    4 ,    0 ,    8 ,    6 ,    0 ,    6 ,    2 ,    6 ,    8 ,    7 ,  255 ,  255 ,  255 ,  255},
 {  3 ,    6 ,    2 ,    3 ,    7 ,    6 ,    1 ,    5 ,    0 ,    5 ,    4 ,    0 ,  255 ,  255 ,  255 ,  255},
 {  6 ,    2 ,    8 ,    6 ,    8 ,    7 ,    2 ,    1 ,    8 ,    4 ,    8 ,    5 ,    1 ,    5 ,    8 ,  255},
 {  9 ,    5 ,    4 ,   10 ,    1 ,    6 ,    1 ,    7 ,    6 ,    1 ,    3 ,    7 ,  255 ,  255 ,  255 ,  255},
 {  1 ,    6 ,   10 ,    1 ,    7 ,    6 ,    1 ,    0 ,    7 ,    8 ,    7 ,    0 ,    9 ,    5 ,    4 ,  255},
 {  4 ,    0 ,   10 ,    4 ,   10 ,    5 ,    0 ,    3 ,   10 ,    6 ,   10 ,    7 ,    3 ,    7 ,   10 ,  255},
 {  7 ,    6 ,   10 ,    7 ,   10 ,    8 ,    5 ,    4 ,   10 ,    4 ,    8 ,   10 ,  255 ,  255 ,  255 ,  255},
 {  6 ,    9 ,    5 ,    6 ,   11 ,    9 ,   11 ,    8 ,    9 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255},
 {  3 ,    6 ,   11 ,    0 ,    6 ,    3 ,    0 ,    5 ,    6 ,    0 ,    9 ,    5 ,  255 ,  255 ,  255 ,  255},
 {  0 ,   11 ,    8 ,    0 ,    5 ,   11 ,    0 ,    1 ,    5 ,    5 ,    6 ,   11 ,  255 ,  255 ,  255 ,  255},
 {  6 ,   11 ,    3 ,    6 ,    3 ,    5 ,    5 ,    3 ,    1 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255},
 {  1 ,    2 ,   10 ,    9 ,    5 ,   11 ,    9 ,   11 ,    8 ,   11 ,    5 ,    6 ,  255 ,  255 ,  255 ,  255},
 {  0 ,   11 ,    3 ,    0 ,    6 ,   11 ,    0 ,    9 ,    6 ,    5 ,    6 ,    9 ,    1 ,    2 ,   10 ,  255},
 { 11 ,    8 ,    5 ,   11 ,    5 ,    6 ,    8 ,    0 ,    5 ,   10 ,    5 ,    2 ,    0 ,    2 ,    5 ,  255},
 {  6 ,   11 ,    3 ,    6 ,    3 ,    5 ,    2 ,   10 ,    3 ,   10 ,    5 ,    3 ,  255 ,  255 ,  255 ,  255},
 {  5 ,    8 ,    9 ,    5 ,    2 ,    8 ,    5 ,    6 ,    2 ,    3 ,    8 ,    2 ,  255 ,  255 ,  255 ,  255},
 {  9 ,    5 ,    6 ,    9 ,    6 ,    0 ,    0 ,    6 ,    2 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255},
 {  1 ,    5 ,    8 ,    1 ,    8 ,    0 ,    5 ,    6 ,    8 ,    3 ,    8 ,    2 ,    6 ,    2 ,    8 ,  255},
 {  1 ,    5 ,    6 ,    2 ,    1 ,    6 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255},
 {  1 ,    3 ,    6 ,    1 ,    6 ,   10 ,    3 ,    8 ,    6 ,    5 ,    6 ,    9 ,    8 ,    9 ,    6 ,  255},
 { 10 ,    1 ,    0 ,   10 ,    0 ,    6 ,    9 ,    5 ,    0 ,    5 ,    6 ,    0 ,  255 ,  255 ,  255 ,  255},
 {  0 ,    3 ,    8 ,    5 ,    6 ,   10 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255},
 { 10 ,    5 ,    6 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255},
 { 11 ,    5 ,   10 ,    7 ,    5 ,   11 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255},
 { 11 ,    5 ,   10 ,   11 ,    7 ,    5 ,    8 ,    3 ,    0 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255},
 {  5 ,   11 ,    7 ,    5 ,   10 ,   11 ,    1 ,    9 ,    0 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255},
 { 10 ,    7 ,    5 ,   10 ,   11 ,    7 ,    9 ,    8 ,    1 ,    8 ,    3 ,    1 ,  255 ,  255 ,  255 ,  255},
 { 11 ,    1 ,    2 ,   11 ,    7 ,    1 ,    7 ,    5 ,    1 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255},
 {  0 ,    8 ,    3 ,    1 ,    2 ,    7 ,    1 ,    7 ,    5 ,    7 ,    2 ,   11 ,  255 ,  255 ,  255 ,  255},
 {  9 ,    7 ,    5 ,    9 ,    2 ,    7 ,    9 ,    0 ,    2 ,    2 ,   11 ,    7 ,  255 ,  255 ,  255 ,  255},
 {  7 ,    5 ,    2 ,    7 ,    2 ,   11 ,    5 ,    9 ,    2 ,    3 ,    2 ,    8 ,    9 ,    8 ,    2 ,  255},
 {  2 ,    5 ,   10 ,    2 ,    3 ,    5 ,    3 ,    7 ,    5 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255},
 {  8 ,    2 ,    0 ,    8 ,    5 ,    2 ,    8 ,    7 ,    5 ,   10 ,    2 ,    5 ,  255 ,  255 ,  255 ,  255},
 {  9 ,    0 ,    1 ,    5 ,   10 ,    3 ,    5 ,    3 ,    7 ,    3 ,   10 ,    2 ,  255 ,  255 ,  255 ,  255},
 {  9 ,    8 ,    2 ,    9 ,    2 ,    1 ,    8 ,    7 ,    2 ,   10 ,    2 ,    5 ,    7 ,    5 ,    2 ,  255},
 {  1 ,    3 ,    5 ,    3 ,    7 ,    5 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255},
 {  0 ,    8 ,    7 ,    0 ,    7 ,    1 ,    1 ,    7 ,    5 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255},
 {  9 ,    0 ,    3 ,    9 ,    3 ,    5 ,    5 ,    3 ,    7 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255},
 {  9 ,    8 ,    7 ,    5 ,    9 ,    7 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255},
 {  5 ,    8 ,    4 ,    5 ,   10 ,    8 ,   10 ,   11 ,    8 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255},
 {  5 ,    0 ,    4 ,    5 ,   11 ,    0 ,    5 ,   10 ,   11 ,   11 ,    3 ,    0 ,  255 ,  255 ,  255 ,  255},
 {  0 ,    1 ,    9 ,    8 ,    4 ,   10 ,    8 ,   10 ,   11 ,   10 ,    4 ,    5 ,  255 ,  255 ,  255 ,  255},
 { 10 ,   11 ,    4 ,   10 ,    4 ,    5 ,   11 ,    3 ,    4 ,    9 ,    4 ,    1 ,    3 ,    1 ,    4 ,  255},
 {  2 ,    5 ,    1 ,    2 ,    8 ,    5 ,    2 ,   11 ,    8 ,    4 ,    5 ,    8 ,  255 ,  255 ,  255 ,  255},
 {  0 ,    4 ,   11 ,    0 ,   11 ,    3 ,    4 ,    5 ,   11 ,    2 ,   11 ,    1 ,    5 ,    1 ,   11 ,  255},
 {  0 ,    2 ,    5 ,    0 ,    5 ,    9 ,    2 ,   11 ,    5 ,    4 ,    5 ,    8 ,   11 ,    8 ,    5 ,  255},
 {  9 ,    4 ,    5 ,    2 ,   11 ,    3 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255},
 {  2 ,    5 ,   10 ,    3 ,    5 ,    2 ,    3 ,    4 ,    5 ,    3 ,    8 ,    4 ,  255 ,  255 ,  255 ,  255},
 {  5 ,   10 ,    2 ,    5 ,    2 ,    4 ,    4 ,    2 ,    0 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255},
 {  3 ,   10 ,    2 ,    3 ,    5 ,   10 ,    3 ,    8 ,    5 ,    4 ,    5 ,    8 ,    0 ,    1 ,    9 ,  255},
 {  5 ,   10 ,    2 ,    5 ,    2 ,    4 ,    1 ,    9 ,    2 ,    9 ,    4 ,    2 ,  255 ,  255 ,  255 ,  255},
 {  8 ,    4 ,    5 ,    8 ,    5 ,    3 ,    3 ,    5 ,    1 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255},
 {  0 ,    4 ,    5 ,    1 ,    0 ,    5 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255},
 {  8 ,    4 ,    5 ,    8 ,    5 ,    3 ,    9 ,    0 ,    5 ,    0 ,    3 ,    5 ,  255 ,  255 ,  255 ,  255},
 {  9 ,    4 ,    5 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255},
 {  4 ,   11 ,    7 ,    4 ,    9 ,   11 ,    9 ,   10 ,   11 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255},
 {  0 ,    8 ,    3 ,    4 ,    9 ,    7 ,    9 ,   11 ,    7 ,    9 ,   10 ,   11 ,  255 ,  255 ,  255 ,  255},
 {  1 ,   10 ,   11 ,    1 ,   11 ,    4 ,    1 ,    4 ,    0 ,    7 ,    4 ,   11 ,  255 ,  255 ,  255 ,  255},
 {  3 ,    1 ,    4 ,    3 ,    4 ,    8 ,    1 ,   10 ,    4 ,    7 ,    4 ,   11 ,   10 ,   11 ,    4 ,  255},
 {  4 ,   11 ,    7 ,    9 ,   11 ,    4 ,    9 ,    2 ,   11 ,    9 ,    1 ,    2 ,  255 ,  255 ,  255 ,  255},
 {  9 ,    7 ,    4 ,    9 ,   11 ,    7 ,    9 ,    1 ,   11 ,    2 ,   11 ,    1 ,    0 ,    8 ,    3 ,  255},
 { 11 ,    7 ,    4 ,   11 ,    4 ,    2 ,    2 ,    4 ,    0 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255},
 { 11 ,    7 ,    4 ,   11 ,    4 ,    2 ,    8 ,    3 ,    4 ,    3 ,    2 ,    4 ,  255 ,  255 ,  255 ,  255},
 {  2 ,    9 ,   10 ,    2 ,    7 ,    9 ,    2 ,    3 ,    7 ,    7 ,    4 ,    9 ,  255 ,  255 ,  255 ,  255},
 {  9 ,   10 ,    7 ,    9 ,    7 ,    4 ,   10 ,    2 ,    7 ,    8 ,    7 ,    0 ,    2 ,    0 ,    7 ,  255},
 {  3 ,    7 ,   10 ,    3 ,   10 ,    2 ,    7 ,    4 ,   10 ,    1 ,   10 ,    0 ,    4 ,    0 ,   10 ,  255},
 {  1 ,   10 ,    2 ,    8 ,    7 ,    4 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255},
 {  4 ,    9 ,    1 ,    4 ,    1 ,    7 ,    7 ,    1 ,    3 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255},
 {  4 ,    9 ,    1 ,    4 ,    1 ,    7 ,    0 ,    8 ,    1 ,    8 ,    7 ,    1 ,  255 ,  255 ,  255 ,  255},
 {  4 ,    0 ,    3 ,    7 ,    4 ,    3 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255},
 {  4 ,    8 ,    7 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255},
 {  9 ,   10 ,    8 ,   10 ,   11 ,    8 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255},
 {  3 ,    0 ,    9 ,    3 ,    9 ,   11 ,   11 ,    9 ,   10 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255},
 {  0 ,    1 ,   10 ,    0 ,   10 ,    8 ,    8 ,   10 ,   11 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255},
 {  3 ,    1 ,   10 ,   11 ,    3 ,   10 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255},
 {  1 ,    2 ,   11 ,    1 ,   11 ,    9 ,    9 ,   11 ,    8 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255},
 {  3 ,    0 ,    9 ,    3 ,    9 ,   11 ,    1 ,    2 ,    9 ,    2 ,   11 ,    9 ,  255 ,  255 ,  255 ,  255},
 {  0 ,    2 ,   11 ,    8 ,    0 ,   11 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255},
 {  3 ,    2 ,   11 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255},
 {  2 ,    3 ,    8 ,    2 ,    8 ,   10 ,   10 ,    8 ,    9 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255},
 {  9 ,   10 ,    2 ,    0 ,    9 ,    2 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255},
 {  2 ,    3 ,    8 ,    2 ,    8 ,   10 ,    0 ,    1 ,    8 ,    1 ,   10 ,    8 ,  255 ,  255 ,  255 ,  255},
 {  1 ,   10 ,    2 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255},
 {  1 ,    3 ,    8 ,    9 ,    1 ,    8 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255},
 {  0 ,    9 ,    1 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255},
 {  0 ,    3 ,    8 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255},
 {255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255}};

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////

//typedef struct _cube
//{
//  float4 pos0;
//  float4 pos1;
//  float4 pos2;
//  float4 pos3;
//  float4 pos4;
//  float4 pos5;
//  float4 pos6;
//  float4 pos7;
//
//  float4 normal0;
//  float4 normal1;
//  float4 normal2;
//  float4 normal3;
//  float4 normal4;
//  float4 normal5;
//  float4 normal6;
//  float4 normal7;
//} cube;

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////

int calculate_case(float d0, float d1, float d2, float d3, float d4, float d5, float d6, float d7 , float isovalue)
{
  int result = 0;
  
  if (d7 < isovalue) { result += 128;} 
  if (d6 < isovalue) { result += 64;}
  if (d5 < isovalue) { result += 32;} 
  if (d4 < isovalue) { result += 16;} 
  if (d3 < isovalue) { result += 8; }
  if (d2 < isovalue) { result += 4; }
  if (d1 < isovalue) { result += 2; }
  if (d0 < isovalue) { result += 1; }
  
  return result;
}

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////

float4 calculate_position(int global_id, int x_offset, int y_offset, int y_dimension, int z_dimension, float block_size)
{
  const float x_coord = ((global_id % x_offset) - 1) * block_size;
  const float y_coord = (((global_id / x_offset) % (y_dimension + 2)) - 1) * block_size;
  const float z_coord = (((global_id / y_offset) % (z_dimension + 2)) - 1) * block_size;
  return (float4) { x_coord, y_coord, z_coord ,0.0f};  
}

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////

float4 calculate_normal(int index, int y_offset, int z_offset, __global float* base_values)
{
  //float d = 1.0 / voxels_per_block;
  float3 grad;
  float right = base_values[index-1]; 
  float left = base_values[index+1]; 
  float up = base_values[index+y_offset]; 
  float down = base_values[index-y_offset]; 
  float z = base_values[index+z_offset]; 
  float z_minus = base_values[index-z_offset]; 
  grad.x = right - left;
  grad.y = up - down;
  grad.z = z - z_minus;
  return (float4){normalize(grad),0.0f}; 
}

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////

float4 interpolateV(float4 va, float4 vb, float isovalue)
{
   if (fabs(isovalue - va.w) < 0.00001f) { return va; }
   else if (fabs(isovalue - vb.w) < 0.00001f) { return vb; }
   else if (fabs(va.w-vb.w) < 0.00001f) { return va; }
   
   else
   {
     float3 p;
     float mu = (isovalue - va.w) / (vb.w - va.w);
     p.x = va.x + mu * (vb.x - va.x);
     p.y = va.y + mu * (vb.y - va.y);
     p.z = va.z + mu * (vb.z - va.z);
     return (float4){p,0.0};
   }
}

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////

float4 interpolateN(float4 na, float4 nb, float densityA, float densityB, float isovalue)
{
   if (fabs(isovalue - densityA) < 0.00001) { return na; }
   else if (fabs(isovalue - densityB) < 0.00001) { return nb; }
   else if (fabs(densityA-densityB) < 0.00001) { return na; }
   
   else
   {
     float3 p;
     float mu = (isovalue - densityA) / (densityB - densityA);
     p.x = na.x + mu * (nb.x - na.x);
     p.y = na.y + mu * (nb.y - na.y);
     p.z = na.z + mu * (nb.z - na.z);
     return (float4){normalize(p),0.0f};
   }
}

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////

void createVertex(char edgeValue,
                  float4 pos0,
                  float4 pos1,
                  float4 pos2,
                  float4 pos3,
                  float4 pos4,
                  float4 pos5,
                  float4 pos6,
                  float4 pos7,
                  float4 normal0,
                  float4 normal1,
                  float4 normal2,
                  float4 normal3,
                  float4 normal4,
                  float4 normal5,
                  float4 normal6,
                  float4 normal7,
                  int arrayIndex,
                  float isovalue,
                  __global float4* output)
{
    // EDGE NUMBER 0
    if (edgeValue == 0)
    {
        output[arrayIndex] = interpolateV(pos0,pos1,isovalue);
        output[arrayIndex+1] = interpolateN(normal0, normal1, pos0.w, pos1.w, isovalue);
    }
    // EDGE NUMBER 1
    else if (edgeValue == 1)
    {
        output[arrayIndex] = interpolateV(pos1,pos2,isovalue);
        output[arrayIndex+1] = interpolateN(normal1, normal2, pos1.w, pos2.w, isovalue);
    }           
    // EDGE NUMBER 2
    else if (edgeValue == 2)
    {
        output[arrayIndex] = interpolateV(pos2,pos3,isovalue);
        output[arrayIndex+1] = interpolateN(normal2, normal3, pos2.w, pos3.w, isovalue);
    }           
    // EDGE NUMBER 3
    else if (edgeValue == 3)
    {
        output[arrayIndex] = interpolateV(pos3,pos0,isovalue);
        output[arrayIndex+1] = interpolateN(normal3, normal0, pos3.w, pos0.w, isovalue);
    }           
    // EDGE NUMBER 4
    else if (edgeValue == 4.0)
    {
        output[arrayIndex] = interpolateV(pos4,pos5,isovalue);
        output[arrayIndex+1] = interpolateN(normal4, normal5, pos4.w, pos5.w, isovalue);
    }           
    // EDGE NUMBER 5
    else if (edgeValue == 5)
    {
        output[arrayIndex] = interpolateV(pos5,pos6,isovalue);
        output[arrayIndex+1] = interpolateN(normal5, normal6, pos5.w, pos6.w, isovalue);
    }           
    // EDGE NUMBER 6
    else if (edgeValue == 6)
    {
        output[arrayIndex] = interpolateV(pos6,pos7,isovalue);
        output[arrayIndex+1] = interpolateN(normal6, normal7, pos6.w, pos7.w, isovalue);
    }           
    // EDGE NUMBER 7
    else if (edgeValue == 7)
    {
        output[arrayIndex] = interpolateV(pos7,pos4,isovalue);
        output[arrayIndex+1] = interpolateN(normal7, normal4, pos7.w, pos4.w, isovalue);
    }           
    // EDGE NUMBER 8
    else if (edgeValue == 8.0)
    {
        output[arrayIndex] = interpolateV(pos0,pos4,isovalue);
        output[arrayIndex+1] = interpolateN(normal0, normal4, pos0.w, pos4.w, isovalue);
    }           
    // EDGE NUMBER 9
    else if (edgeValue == 9)
    {
        output[arrayIndex] = interpolateV(pos1,pos5,isovalue);
        output[arrayIndex+1] = interpolateN(normal1, normal5, pos1.w, pos5.w, isovalue);
    }           
    // EDGE NUMBER 10 
    else if (edgeValue == 10.0)
    {
        output[arrayIndex] = interpolateV(pos2,pos6,isovalue) ;
        output[arrayIndex+1] = interpolateN(normal2, normal6, pos2.w, pos6.w, isovalue);
    }           
    // EDGE NUMBER 11 
    else if (edgeValue == 11)
    {
        output[arrayIndex] = interpolateV(pos3,pos7,isovalue);
        output[arrayIndex+1] = interpolateN(normal3, normal7, pos3.w, pos7.w, isovalue);
    }    
}

inline void addToPrkl(float4 val, int index, __global float4* output)
{
  output[index] = val; 
}

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////

__kernel void mc(__global float* base_values,
                 __global float4* output,
                 __global int* counterArg,       
                 int x_dimension,
                 int y_dimension,
                 int z_dimension,
                 float block_size,
                 float isovalue,
                 int n)
{
  const int global_id = get_global_id(0);
  volatile __global int* counterPtr = counterArg;
  //volatile __global int* counterPtr = counterArg;

  //float3 f3 = (float3){123,234,345};
  //output[0]   = (float4){f3,555}; //c.pos0;
//  atomic_inc(counterPtr);
//  output[global_id] = (float4){global_id,1.0f,a,1.5f};
  if (global_id >= n) return;  

  const int y_offset = x_dimension + 2;
  const int z_offset = y_offset * (y_dimension + 2);

  const float4 pos = (float4) {calculate_position(global_id, y_offset, z_offset, y_dimension, z_dimension, block_size).xyz, base_values[global_id]};
  
//  output[global_id] = pos;

// Check if the cube is in it's boundaries.
if (!(pos.x < 0 || pos.x > x_dimension || pos.y < 0 || pos.y > y_dimension || pos.z  < 0 || pos.z  > z_dimension)) return;

// Create the cube.
//        v5                        v6
//         +------------------------+
//        /|                       /|
//       / |                      / |
//      /  |                     /  |
//     /   |                    /   |  
//    /    |                   /    |
//v1 +------------------------+ v2  |
//   |     |                  |     |
//   |     |                  |     |
//   |     |                  |     |
//   |  v4 +------------------|-----+ v7
//   |    /                   |    /
//   |   /                    |   /
//   |  /                     |  /    
//   | /                      | /
//   |/                       |/
//   +------------------------+
//  v0                       v3

//float8 cube;
//cube.s0 = base_values[global_id]; //v0
//cube.s1 = base_values[global_id+y_offset]; //v1
//cube.s2 = base_values[global_id+y_offset+1]; //v2
//cube.s3 = base_values[global_id+1]; //v3
//cube.s4 = base_values[global_id+z_offset]; //v4
//cube.s5 = base_values[global_id+y_offset+z_offset]; //v5
//cube.s6 = base_values[global_id+y_offset+z_offset+1]; //v6
//cube.s7 = base_values[global_id+z_offset+1]; //v7


  const int index1 = global_id+y_offset;
  const int index2 = global_id+y_offset+1;
  const int index3 = global_id+1;
  const int index4 = global_id+z_offset;
  const int index5 = global_id+y_offset+z_offset;
  const int index6 = global_id+y_offset+z_offset+1;
  const int index7 = global_id+z_offset+1;
  
  const float v0_density = base_values[global_id]; //v0
  const float v1_density = base_values[index1]; //v1
  const float v2_density = base_values[index2]; //v2
  const float v3_density = base_values[index3]; //v3
  const float v4_density = base_values[index4]; //v4
  const float v5_density = base_values[index5]; //v5
  const float v6_density = base_values[index6]; //v6
  const float v7_density = base_values[index7]; //v7

// Calculate the cube case number.
const int cube_case = calculate_case(v0_density,
                                     v1_density,
                                     v2_density,
                                     v3_density,
                                     v4_density,
                                     v5_density,
                                     v6_density,
                                     v7_density,
                                     isovalue);

// The cube doesn't produce any geometry.
if (cube_case == 0 || cube_case == 255) return;

  //output[global_id] = (float4){global_id,1.3f,cube_case,1.7f};

//  float16 cube;
float4 p0 = (float4){calculate_position(global_id, y_offset, z_offset, y_dimension, z_dimension, block_size).xyz, v0_density}; //(float4){12.0f,13.0f,14.0f,15.0f}; //(float4){pos};  
float4 p1 = (float4){calculate_position(   index1, y_offset, z_offset, y_dimension, z_dimension, block_size).xyz, v1_density}; 
float4 p2 = (float4){calculate_position(   index2, y_offset, z_offset, y_dimension, z_dimension, block_size).xyz, v2_density}; 
float4 p3 = (float4){calculate_position(   index3, y_offset, z_offset, y_dimension, z_dimension, block_size).xyz, v3_density}; 
float4 p4 = (float4){calculate_position(   index4, y_offset, z_offset, y_dimension, z_dimension, block_size).xyz, v4_density}; 
float4 p5 = (float4){calculate_position(   index5, y_offset, z_offset, y_dimension, z_dimension, block_size).xyz, v5_density}; 
float4 p6 = (float4){calculate_position(   index6, y_offset, z_offset, y_dimension, z_dimension, block_size).xyz, v6_density}; 
float4 p7 = (float4){calculate_position(   index7, y_offset, z_offset, y_dimension, z_dimension, block_size).xyz, v7_density}; 

//
float4 n0 = calculate_normal(global_id, y_offset, z_offset, base_values);  
float4 n1 = calculate_normal(index1, y_offset, z_offset, base_values); 
float4 n2 = calculate_normal(index2, y_offset, z_offset, base_values); 
float4 n3 = calculate_normal(index3, y_offset, z_offset, base_values); 
float4 n4 = calculate_normal(index4, y_offset, z_offset, base_values); 
float4 n5 = calculate_normal(index5, y_offset, z_offset, base_values); 
float4 n6 = calculate_normal(index6, y_offset, z_offset, base_values); 
float4 n7 = calculate_normal(index7, y_offset, z_offset, base_values); 

  char16 tri_case = triTable[cube_case];

// We are going to add a triable. 3 postion vertices and 3 normal vertices.
int index = atomic_add(counterPtr,2);

  createVertex(tri_case.s0, p0,p1,p2,p3,p4,p5,p6,p7,n0,n1,n2,n3,n4,n5,n6,n7, index, isovalue, output);
  createVertex(tri_case.s1, p0,p1,p2,p3,p4,p5,p6,p7,n0,n1,n2,n3,n4,n5,n6,n7, index, isovalue, output);
  createVertex(tri_case.s2, p0,p1,p2,p3,p4,p5,p6,p7,n0,n1,n2,n3,n4,n5,n6,n7, index, isovalue, output);
//
//  if (tri_case.s3 == 255) return;
//
//  index = atomic_add(counterPtr,2);
//
//  createVertex(tri_case.s3, c, index, isovalue, output);
//  createVertex(tri_case.s4, c, index, isovalue, output);
//  createVertex(tri_case.s5, c, index, isovalue, output);
//
//  if (tri_case.s6 == 255) return;
//
//  index = atomic_add(counterPtr,2);
//
//  createVertex(tri_case.s6, c, index, isovalue, output);
//  createVertex(tri_case.s7, c, index, isovalue, output);
//  createVertex(tri_case.s8, c, index, isovalue, output);
//
//  if (tri_case.s9 == 255) return;
//
//  index = atomic_add(counterPtr,2);
//
//  createVertex(tri_case.s9, c, index, isovalue, output);
//  createVertex(tri_case.sa, c, index, isovalue, output);
//  createVertex(tri_case.sb, c, index, isovalue, output);
//
//  if (tri_case.sc == 255) return;
//
//  index = atomic_add(counterPtr,2);
//
//  createVertex(tri_case.sc, c, index, isovalue, output);
//  createVertex(tri_case.sd, c, index, isovalue, output);
//  createVertex(tri_case.se, c, index, isovalue, output);
////  }
}                                                                               
