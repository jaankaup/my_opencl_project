// The tritable.
__constant char16 triTable[256] = {
 {255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255},
 {  0 ,    8 ,    3 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255},
 {  0 ,    1 ,    9 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255},
 {  1 ,    8 ,    3 ,    9 ,    8 ,    1 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255},
 {  1 ,    2 ,   10 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255},
 {  0 ,    8 ,    3 ,    1 ,    2 ,   10 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255},
 {  9 ,    2 ,   10 ,    0 ,    2 ,    9 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255},
 {  2 ,    8 ,    3 ,    2 ,   10 ,    8 ,   10 ,    9 ,    8 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255},
 {  3 ,   11 ,    2 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255},
 {  0 ,   11 ,    2 ,    8 ,   11 ,    0 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255},
 {  1 ,    9 ,    0 ,    2 ,    3 ,   11 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255},
 {  1 ,   11 ,    2 ,    1 ,    9 ,   11 ,    9 ,    8 ,   11 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255},
 {  3 ,   10 ,    1 ,   11 ,   10 ,    3 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255},
 {  0 ,   10 ,    1 ,    0 ,    8 ,   10 ,    8 ,   11 ,   10 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255},
 {  3 ,    9 ,    0 ,    3 ,   11 ,    9 ,   11 ,   10 ,    9 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255},
 {  9 ,    8 ,   10 ,   10 ,    8 ,   11 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255},
 {  4 ,    7 ,    8 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255},
 {  4 ,    3 ,    0 ,    7 ,    3 ,    4 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255},
 {  0 ,    1 ,    9 ,    8 ,    4 ,    7 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255},
 {  4 ,    1 ,    9 ,    4 ,    7 ,    1 ,    7 ,    3 ,    1 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255},
 {  1 ,    2 ,   10 ,    8 ,    4 ,    7 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255},
 {  3 ,    4 ,    7 ,    3 ,    0 ,    4 ,    1 ,    2 ,   10 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255},
 {  9 ,    2 ,   10 ,    9 ,    0 ,    2 ,    8 ,    4 ,    7 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255},
 {  2 ,   10 ,    9 ,    2 ,    9 ,    7 ,    2 ,    7 ,    3 ,    7 ,    9 ,    4 ,  255 ,  255 ,  255 ,  255},
 {  8 ,    4 ,    7 ,    3 ,   11 ,    2 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255},
 { 11 ,    4 ,    7 ,   11 ,    2 ,    4 ,    2 ,    0 ,    4 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255},
 {  9 ,    0 ,    1 ,    8 ,    4 ,    7 ,    2 ,    3 ,   11 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255},
 {  4 ,    7 ,   11 ,    9 ,    4 ,   11 ,    9 ,   11 ,    2 ,    9 ,    2 ,    1 ,  255 ,  255 ,  255 ,  255},
 {  3 ,   10 ,    1 ,    3 ,   11 ,   10 ,    7 ,    8 ,    4 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255},
 {  1 ,   11 ,   10 ,    1 ,    4 ,   11 ,    1 ,    0 ,    4 ,    7 ,   11 ,    4 ,  255 ,  255 ,  255 ,  255},
 {  4 ,    7 ,    8 ,    9 ,    0 ,   11 ,    9 ,   11 ,   10 ,   11 ,    0 ,    3 ,  255 ,  255 ,  255 ,  255},
 {  4 ,    7 ,   11 ,    4 ,   11 ,    9 ,    9 ,   11 ,   10 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255},
 {  9 ,    5 ,    4 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255},
 {  9 ,    5 ,    4 ,    0 ,    8 ,    3 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255},
 {  0 ,    5 ,    4 ,    1 ,    5 ,    0 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255},
 {  8 ,    5 ,    4 ,    8 ,    3 ,    5 ,    3 ,    1 ,    5 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255},
 {  1 ,    2 ,   10 ,    9 ,    5 ,    4 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255},
 {  3 ,    0 ,    8 ,    1 ,    2 ,   10 ,    4 ,    9 ,    5 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255},
 {  5 ,    2 ,   10 ,    5 ,    4 ,    2 ,    4 ,    0 ,    2 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255},
 {  2 ,   10 ,    5 ,    3 ,    2 ,    5 ,    3 ,    5 ,    4 ,    3 ,    4 ,    8 ,  255 ,  255 ,  255 ,  255},
 {  9 ,    5 ,    4 ,    2 ,    3 ,   11 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255},
 {  0 ,   11 ,    2 ,    0 ,    8 ,   11 ,    4 ,    9 ,    5 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255},
 {  0 ,    5 ,    4 ,    0 ,    1 ,    5 ,    2 ,    3 ,   11 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255},
 {  2 ,    1 ,    5 ,    2 ,    5 ,    8 ,    2 ,    8 ,   11 ,    4 ,    8 ,    5 ,  255 ,  255 ,  255 ,  255},
 { 10 ,    3 ,   11 ,   10 ,    1 ,    3 ,    9 ,    5 ,    4 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255},
 {  4 ,    9 ,    5 ,    0 ,    8 ,    1 ,    8 ,   10 ,    1 ,    8 ,   11 ,   10 ,  255 ,  255 ,  255 ,  255},
 {  5 ,    4 ,    0 ,    5 ,    0 ,   11 ,    5 ,   11 ,   10 ,   11 ,    0 ,    3 ,  255 ,  255 ,  255 ,  255},
 {  5 ,    4 ,    8 ,    5 ,    8 ,   10 ,   10 ,    8 ,   11 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255},
 {  9 ,    7 ,    8 ,    5 ,    7 ,    9 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255},
 {  9 ,    3 ,    0 ,    9 ,    5 ,    3 ,    5 ,    7 ,    3 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255},
 {  0 ,    7 ,    8 ,    0 ,    1 ,    7 ,    1 ,    5 ,    7 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255},
 {  1 ,    5 ,    3 ,    3 ,    5 ,    7 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255},
 {  9 ,    7 ,    8 ,    9 ,    5 ,    7 ,   10 ,    1 ,    2 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255},
 { 10 ,    1 ,    2 ,    9 ,    5 ,    0 ,    5 ,    3 ,    0 ,    5 ,    7 ,    3 ,  255 ,  255 ,  255 ,  255},
 {  8 ,    0 ,    2 ,    8 ,    2 ,    5 ,    8 ,    5 ,    7 ,   10 ,    5 ,    2 ,  255 ,  255 ,  255 ,  255},
 {  2 ,   10 ,    5 ,    2 ,    5 ,    3 ,    3 ,    5 ,    7 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255},
 {  7 ,    9 ,    5 ,    7 ,    8 ,    9 ,    3 ,   11 ,    2 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255},
 {  9 ,    5 ,    7 ,    9 ,    7 ,    2 ,    9 ,    2 ,    0 ,    2 ,    7 ,   11 ,  255 ,  255 ,  255 ,  255},
 {  2 ,    3 ,   11 ,    0 ,    1 ,    8 ,    1 ,    7 ,    8 ,    1 ,    5 ,    7 ,  255 ,  255 ,  255 ,  255},
 { 11 ,    2 ,    1 ,   11 ,    1 ,    7 ,    7 ,    1 ,    5 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255},
 {  9 ,    5 ,    8 ,    8 ,    5 ,    7 ,   10 ,    1 ,    3 ,   10 ,    3 ,   11 ,  255 ,  255 ,  255 ,  255},
 {  5 ,    7 ,    0 ,    5 ,    0 ,    9 ,    7 ,   11 ,    0 ,    1 ,    0 ,   10 ,   11 ,   10 ,    0 ,  255},
 { 11 ,   10 ,    0 ,   11 ,    0 ,    3 ,   10 ,    5 ,    0 ,    8 ,    0 ,    7 ,    5 ,    7 ,    0 ,  255},
 { 11 ,   10 ,    5 ,    7 ,   11 ,    5 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255},
 { 10 ,    6 ,    5 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255},
 {  0 ,    8 ,    3 ,    5 ,   10 ,    6 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255},
 {  9 ,    0 ,    1 ,    5 ,   10 ,    6 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255},
 {  1 ,    8 ,    3 ,    1 ,    9 ,    8 ,    5 ,   10 ,    6 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255},
 {  1 ,    6 ,    5 ,    2 ,    6 ,    1 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255},
 {  1 ,    6 ,    5 ,    1 ,    2 ,    6 ,    3 ,    0 ,    8 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255},
 {  9 ,    6 ,    5 ,    9 ,    0 ,    6 ,    0 ,    2 ,    6 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255},
 {  5 ,    9 ,    8 ,    5 ,    8 ,    2 ,    5 ,    2 ,    6 ,    3 ,    2 ,    8 ,  255 ,  255 ,  255 ,  255},
 {  2 ,    3 ,   11 ,   10 ,    6 ,    5 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255},
 { 11 ,    0 ,    8 ,   11 ,    2 ,    0 ,   10 ,    6 ,    5 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255},
 {  0 ,    1 ,    9 ,    2 ,    3 ,   11 ,    5 ,   10 ,    6 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255},
 {  5 ,   10 ,    6 ,    1 ,    9 ,    2 ,    9 ,   11 ,    2 ,    9 ,    8 ,   11 ,  255 ,  255 ,  255 ,  255},
 {  6 ,    3 ,   11 ,    6 ,    5 ,    3 ,    5 ,    1 ,    3 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255},
 {  0 ,    8 ,   11 ,    0 ,   11 ,    5 ,    0 ,    5 ,    1 ,    5 ,   11 ,    6 ,  255 ,  255 ,  255 ,  255},
 {  3 ,   11 ,    6 ,    0 ,    3 ,    6 ,    0 ,    6 ,    5 ,    0 ,    5 ,    9 ,  255 ,  255 ,  255 ,  255},
 {  6 ,    5 ,    9 ,    6 ,    9 ,   11 ,   11 ,    9 ,    8 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255},
 {  5 ,   10 ,    6 ,    4 ,    7 ,    8 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255},
 {  4 ,    3 ,    0 ,    4 ,    7 ,    3 ,    6 ,    5 ,   10 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255},
 {  1 ,    9 ,    0 ,    5 ,   10 ,    6 ,    8 ,    4 ,    7 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255},
 { 10 ,    6 ,    5 ,    1 ,    9 ,    7 ,    1 ,    7 ,    3 ,    7 ,    9 ,    4 ,  255 ,  255 ,  255 ,  255},
 {  6 ,    1 ,    2 ,    6 ,    5 ,    1 ,    4 ,    7 ,    8 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255},
 {  1 ,    2 ,    5 ,    5 ,    2 ,    6 ,    3 ,    0 ,    4 ,    3 ,    4 ,    7 ,  255 ,  255 ,  255 ,  255},
 {  8 ,    4 ,    7 ,    9 ,    0 ,    5 ,    0 ,    6 ,    5 ,    0 ,    2 ,    6 ,  255 ,  255 ,  255 ,  255},
 {  7 ,    3 ,    9 ,    7 ,    9 ,    4 ,    3 ,    2 ,    9 ,    5 ,    9 ,    6 ,    2 ,    6 ,    9 ,  255},
 {  3 ,   11 ,    2 ,    7 ,    8 ,    4 ,   10 ,    6 ,    5 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255},
 {  5 ,   10 ,    6 ,    4 ,    7 ,    2 ,    4 ,    2 ,    0 ,    2 ,    7 ,   11 ,  255 ,  255 ,  255 ,  255},
 {  0 ,    1 ,    9 ,    4 ,    7 ,    8 ,    2 ,    3 ,   11 ,    5 ,   10 ,    6 ,  255 ,  255 ,  255 ,  255},
 {  9 ,    2 ,    1 ,    9 ,   11 ,    2 ,    9 ,    4 ,   11 ,    7 ,   11 ,    4 ,    5 ,   10 ,    6 ,  255},
 {  8 ,    4 ,    7 ,    3 ,   11 ,    5 ,    3 ,    5 ,    1 ,    5 ,   11 ,    6 ,  255 ,  255 ,  255 ,  255},
 {  5 ,    1 ,   11 ,    5 ,   11 ,    6 ,    1 ,    0 ,   11 ,    7 ,   11 ,    4 ,    0 ,    4 ,   11 ,  255},
 {  0 ,    5 ,    9 ,    0 ,    6 ,    5 ,    0 ,    3 ,    6 ,   11 ,    6 ,    3 ,    8 ,    4 ,    7 ,  255},
 {  6 ,    5 ,    9 ,    6 ,    9 ,   11 ,    4 ,    7 ,    9 ,    7 ,   11 ,    9 ,  255 ,  255 ,  255 ,  255},
 { 10 ,    4 ,    9 ,    6 ,    4 ,   10 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255},
 {  4 ,   10 ,    6 ,    4 ,    9 ,   10 ,    0 ,    8 ,    3 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255},
 { 10 ,    0 ,    1 ,   10 ,    6 ,    0 ,    6 ,    4 ,    0 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255},
 {  8 ,    3 ,    1 ,    8 ,    1 ,    6 ,    8 ,    6 ,    4 ,    6 ,    1 ,   10 ,  255 ,  255 ,  255 ,  255},
 {  1 ,    4 ,    9 ,    1 ,    2 ,    4 ,    2 ,    6 ,    4 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255},
 {  3 ,    0 ,    8 ,    1 ,    2 ,    9 ,    2 ,    4 ,    9 ,    2 ,    6 ,    4 ,  255 ,  255 ,  255 ,  255},
 {  0 ,    2 ,    4 ,    4 ,    2 ,    6 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255},
 {  8 ,    3 ,    2 ,    8 ,    2 ,    4 ,    4 ,    2 ,    6 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255},
 { 10 ,    4 ,    9 ,   10 ,    6 ,    4 ,   11 ,    2 ,    3 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255},
 {  0 ,    8 ,    2 ,    2 ,    8 ,   11 ,    4 ,    9 ,   10 ,    4 ,   10 ,    6 ,  255 ,  255 ,  255 ,  255},
 {  3 ,   11 ,    2 ,    0 ,    1 ,    6 ,    0 ,    6 ,    4 ,    6 ,    1 ,   10 ,  255 ,  255 ,  255 ,  255},
 {  6 ,    4 ,    1 ,    6 ,    1 ,   10 ,    4 ,    8 ,    1 ,    2 ,    1 ,   11 ,    8 ,   11 ,    1 ,  255},
 {  9 ,    6 ,    4 ,    9 ,    3 ,    6 ,    9 ,    1 ,    3 ,   11 ,    6 ,    3 ,  255 ,  255 ,  255 ,  255},
 {  8 ,   11 ,    1 ,    8 ,    1 ,    0 ,   11 ,    6 ,    1 ,    9 ,    1 ,    4 ,    6 ,    4 ,    1 ,  255},
 {  3 ,   11 ,    6 ,    3 ,    6 ,    0 ,    0 ,    6 ,    4 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255},
 {  6 ,    4 ,    8 ,   11 ,    6 ,    8 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255},
 {  7 ,   10 ,    6 ,    7 ,    8 ,   10 ,    8 ,    9 ,   10 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255},
 {  0 ,    7 ,    3 ,    0 ,   10 ,    7 ,    0 ,    9 ,   10 ,    6 ,    7 ,   10 ,  255 ,  255 ,  255 ,  255},
 { 10 ,    6 ,    7 ,    1 ,   10 ,    7 ,    1 ,    7 ,    8 ,    1 ,    8 ,    0 ,  255 ,  255 ,  255 ,  255},
 { 10 ,    6 ,    7 ,   10 ,    7 ,    1 ,    1 ,    7 ,    3 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255},
 {  1 ,    2 ,    6 ,    1 ,    6 ,    8 ,    1 ,    8 ,    9 ,    8 ,    6 ,    7 ,  255 ,  255 ,  255 ,  255},
 {  2 ,    6 ,    9 ,    2 ,    9 ,    1 ,    6 ,    7 ,    9 ,    0 ,    9 ,    3 ,    7 ,    3 ,    9 ,  255},
 {  7 ,    8 ,    0 ,    7 ,    0 ,    6 ,    6 ,    0 ,    2 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255},
 {  7 ,    3 ,    2 ,    6 ,    7 ,    2 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255},
 {  2 ,    3 ,   11 ,   10 ,    6 ,    8 ,   10 ,    8 ,    9 ,    8 ,    6 ,    7 ,  255 ,  255 ,  255 ,  255},
 {  2 ,    0 ,    7 ,    2 ,    7 ,   11 ,    0 ,    9 ,    7 ,    6 ,    7 ,   10 ,    9 ,   10 ,    7 ,  255},
 {  1 ,    8 ,    0 ,    1 ,    7 ,    8 ,    1 ,   10 ,    7 ,    6 ,    7 ,   10 ,    2 ,    3 ,   11 ,  255},
 { 11 ,    2 ,    1 ,   11 ,    1 ,    7 ,   10 ,    6 ,    1 ,    6 ,    7 ,    1 ,  255 ,  255 ,  255 ,  255},
 {  8 ,    9 ,    6 ,    8 ,    6 ,    7 ,    9 ,    1 ,    6 ,   11 ,    6 ,    3 ,    1 ,    3 ,    6 ,  255},
 {  0 ,    9 ,    1 ,   11 ,    6 ,    7 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255},
 {  7 ,    8 ,    0 ,    7 ,    0 ,    6 ,    3 ,   11 ,    0 ,   11 ,    6 ,    0 ,  255 ,  255 ,  255 ,  255},
 {  7 ,   11 ,    6 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255},
 {  7 ,    6 ,   11 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255},
 {  3 ,    0 ,    8 ,   11 ,    7 ,    6 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255},
 {  0 ,    1 ,    9 ,   11 ,    7 ,    6 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255},
 {  8 ,    1 ,    9 ,    8 ,    3 ,    1 ,   11 ,    7 ,    6 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255},
 { 10 ,    1 ,    2 ,    6 ,   11 ,    7 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255},
 {  1 ,    2 ,   10 ,    3 ,    0 ,    8 ,    6 ,   11 ,    7 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255},
 {  2 ,    9 ,    0 ,    2 ,   10 ,    9 ,    6 ,   11 ,    7 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255},
 {  6 ,   11 ,    7 ,    2 ,   10 ,    3 ,   10 ,    8 ,    3 ,   10 ,    9 ,    8 ,  255 ,  255 ,  255 ,  255},
 {  7 ,    2 ,    3 ,    6 ,    2 ,    7 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255},
 {  7 ,    0 ,    8 ,    7 ,    6 ,    0 ,    6 ,    2 ,    0 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255},
 {  2 ,    7 ,    6 ,    2 ,    3 ,    7 ,    0 ,    1 ,    9 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255},
 {  1 ,    6 ,    2 ,    1 ,    8 ,    6 ,    1 ,    9 ,    8 ,    8 ,    7 ,    6 ,  255 ,  255 ,  255 ,  255},
 { 10 ,    7 ,    6 ,   10 ,    1 ,    7 ,    1 ,    3 ,    7 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255},
 { 10 ,    7 ,    6 ,    1 ,    7 ,   10 ,    1 ,    8 ,    7 ,    1 ,    0 ,    8 ,  255 ,  255 ,  255 ,  255},
 {  0 ,    3 ,    7 ,    0 ,    7 ,   10 ,    0 ,   10 ,    9 ,    6 ,   10 ,    7 ,  255 ,  255 ,  255 ,  255},
 {  7 ,    6 ,   10 ,    7 ,   10 ,    8 ,    8 ,   10 ,    9 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255},
 {  6 ,    8 ,    4 ,   11 ,    8 ,    6 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255},
 {  3 ,    6 ,   11 ,    3 ,    0 ,    6 ,    0 ,    4 ,    6 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255},
 {  8 ,    6 ,   11 ,    8 ,    4 ,    6 ,    9 ,    0 ,    1 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255},
 {  9 ,    4 ,    6 ,    9 ,    6 ,    3 ,    9 ,    3 ,    1 ,   11 ,    3 ,    6 ,  255 ,  255 ,  255 ,  255},
 {  6 ,    8 ,    4 ,    6 ,   11 ,    8 ,    2 ,   10 ,    1 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255},
 {  1 ,    2 ,   10 ,    3 ,    0 ,   11 ,    0 ,    6 ,   11 ,    0 ,    4 ,    6 ,  255 ,  255 ,  255 ,  255},
 {  4 ,   11 ,    8 ,    4 ,    6 ,   11 ,    0 ,    2 ,    9 ,    2 ,   10 ,    9 ,  255 ,  255 ,  255 ,  255},
 { 10 ,    9 ,    3 ,   10 ,    3 ,    2 ,    9 ,    4 ,    3 ,   11 ,    3 ,    6 ,    4 ,    6 ,    3 ,  255},
 {  8 ,    2 ,    3 ,    8 ,    4 ,    2 ,    4 ,    6 ,    2 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255},
 {  0 ,    4 ,    2 ,    4 ,    6 ,    2 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255},
 {  1 ,    9 ,    0 ,    2 ,    3 ,    4 ,    2 ,    4 ,    6 ,    4 ,    3 ,    8 ,  255 ,  255 ,  255 ,  255},
 {  1 ,    9 ,    4 ,    1 ,    4 ,    2 ,    2 ,    4 ,    6 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255},
 {  8 ,    1 ,    3 ,    8 ,    6 ,    1 ,    8 ,    4 ,    6 ,    6 ,   10 ,    1 ,  255 ,  255 ,  255 ,  255},
 { 10 ,    1 ,    0 ,   10 ,    0 ,    6 ,    6 ,    0 ,    4 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255},
 {  4 ,    6 ,    3 ,    4 ,    3 ,    8 ,    6 ,   10 ,    3 ,    0 ,    3 ,    9 ,   10 ,    9 ,    3 ,  255},
 { 10 ,    9 ,    4 ,    6 ,   10 ,    4 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255},
 {  4 ,    9 ,    5 ,    7 ,    6 ,   11 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255},
 {  0 ,    8 ,    3 ,    4 ,    9 ,    5 ,   11 ,    7 ,    6 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255},
 {  5 ,    0 ,    1 ,    5 ,    4 ,    0 ,    7 ,    6 ,   11 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255},
 { 11 ,    7 ,    6 ,    8 ,    3 ,    4 ,    3 ,    5 ,    4 ,    3 ,    1 ,    5 ,  255 ,  255 ,  255 ,  255},
 {  9 ,    5 ,    4 ,   10 ,    1 ,    2 ,    7 ,    6 ,   11 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255},
 {  6 ,   11 ,    7 ,    1 ,    2 ,   10 ,    0 ,    8 ,    3 ,    4 ,    9 ,    5 ,  255 ,  255 ,  255 ,  255},
 {  7 ,    6 ,   11 ,    5 ,    4 ,   10 ,    4 ,    2 ,   10 ,    4 ,    0 ,    2 ,  255 ,  255 ,  255 ,  255},
 {  3 ,    4 ,    8 ,    3 ,    5 ,    4 ,    3 ,    2 ,    5 ,   10 ,    5 ,    2 ,   11 ,    7 ,    6 ,  255},
 {  7 ,    2 ,    3 ,    7 ,    6 ,    2 ,    5 ,    4 ,    9 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255},
 {  9 ,    5 ,    4 ,    0 ,    8 ,    6 ,    0 ,    6 ,    2 ,    6 ,    8 ,    7 ,  255 ,  255 ,  255 ,  255},
 {  3 ,    6 ,    2 ,    3 ,    7 ,    6 ,    1 ,    5 ,    0 ,    5 ,    4 ,    0 ,  255 ,  255 ,  255 ,  255},
 {  6 ,    2 ,    8 ,    6 ,    8 ,    7 ,    2 ,    1 ,    8 ,    4 ,    8 ,    5 ,    1 ,    5 ,    8 ,  255},
 {  9 ,    5 ,    4 ,   10 ,    1 ,    6 ,    1 ,    7 ,    6 ,    1 ,    3 ,    7 ,  255 ,  255 ,  255 ,  255},
 {  1 ,    6 ,   10 ,    1 ,    7 ,    6 ,    1 ,    0 ,    7 ,    8 ,    7 ,    0 ,    9 ,    5 ,    4 ,  255},
 {  4 ,    0 ,   10 ,    4 ,   10 ,    5 ,    0 ,    3 ,   10 ,    6 ,   10 ,    7 ,    3 ,    7 ,   10 ,  255},
 {  7 ,    6 ,   10 ,    7 ,   10 ,    8 ,    5 ,    4 ,   10 ,    4 ,    8 ,   10 ,  255 ,  255 ,  255 ,  255},
 {  6 ,    9 ,    5 ,    6 ,   11 ,    9 ,   11 ,    8 ,    9 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255},
 {  3 ,    6 ,   11 ,    0 ,    6 ,    3 ,    0 ,    5 ,    6 ,    0 ,    9 ,    5 ,  255 ,  255 ,  255 ,  255},
 {  0 ,   11 ,    8 ,    0 ,    5 ,   11 ,    0 ,    1 ,    5 ,    5 ,    6 ,   11 ,  255 ,  255 ,  255 ,  255},
 {  6 ,   11 ,    3 ,    6 ,    3 ,    5 ,    5 ,    3 ,    1 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255},
 {  1 ,    2 ,   10 ,    9 ,    5 ,   11 ,    9 ,   11 ,    8 ,   11 ,    5 ,    6 ,  255 ,  255 ,  255 ,  255},
 {  0 ,   11 ,    3 ,    0 ,    6 ,   11 ,    0 ,    9 ,    6 ,    5 ,    6 ,    9 ,    1 ,    2 ,   10 ,  255},
 { 11 ,    8 ,    5 ,   11 ,    5 ,    6 ,    8 ,    0 ,    5 ,   10 ,    5 ,    2 ,    0 ,    2 ,    5 ,  255},
 {  6 ,   11 ,    3 ,    6 ,    3 ,    5 ,    2 ,   10 ,    3 ,   10 ,    5 ,    3 ,  255 ,  255 ,  255 ,  255},
 {  5 ,    8 ,    9 ,    5 ,    2 ,    8 ,    5 ,    6 ,    2 ,    3 ,    8 ,    2 ,  255 ,  255 ,  255 ,  255},
 {  9 ,    5 ,    6 ,    9 ,    6 ,    0 ,    0 ,    6 ,    2 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255},
 {  1 ,    5 ,    8 ,    1 ,    8 ,    0 ,    5 ,    6 ,    8 ,    3 ,    8 ,    2 ,    6 ,    2 ,    8 ,  255},
 {  1 ,    5 ,    6 ,    2 ,    1 ,    6 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255},
 {  1 ,    3 ,    6 ,    1 ,    6 ,   10 ,    3 ,    8 ,    6 ,    5 ,    6 ,    9 ,    8 ,    9 ,    6 ,  255},
 { 10 ,    1 ,    0 ,   10 ,    0 ,    6 ,    9 ,    5 ,    0 ,    5 ,    6 ,    0 ,  255 ,  255 ,  255 ,  255},
 {  0 ,    3 ,    8 ,    5 ,    6 ,   10 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255},
 { 10 ,    5 ,    6 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255},
 { 11 ,    5 ,   10 ,    7 ,    5 ,   11 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255},
 { 11 ,    5 ,   10 ,   11 ,    7 ,    5 ,    8 ,    3 ,    0 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255},
 {  5 ,   11 ,    7 ,    5 ,   10 ,   11 ,    1 ,    9 ,    0 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255},
 { 10 ,    7 ,    5 ,   10 ,   11 ,    7 ,    9 ,    8 ,    1 ,    8 ,    3 ,    1 ,  255 ,  255 ,  255 ,  255},
 { 11 ,    1 ,    2 ,   11 ,    7 ,    1 ,    7 ,    5 ,    1 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255},
 {  0 ,    8 ,    3 ,    1 ,    2 ,    7 ,    1 ,    7 ,    5 ,    7 ,    2 ,   11 ,  255 ,  255 ,  255 ,  255},
 {  9 ,    7 ,    5 ,    9 ,    2 ,    7 ,    9 ,    0 ,    2 ,    2 ,   11 ,    7 ,  255 ,  255 ,  255 ,  255},
 {  7 ,    5 ,    2 ,    7 ,    2 ,   11 ,    5 ,    9 ,    2 ,    3 ,    2 ,    8 ,    9 ,    8 ,    2 ,  255},
 {  2 ,    5 ,   10 ,    2 ,    3 ,    5 ,    3 ,    7 ,    5 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255},
 {  8 ,    2 ,    0 ,    8 ,    5 ,    2 ,    8 ,    7 ,    5 ,   10 ,    2 ,    5 ,  255 ,  255 ,  255 ,  255},
 {  9 ,    0 ,    1 ,    5 ,   10 ,    3 ,    5 ,    3 ,    7 ,    3 ,   10 ,    2 ,  255 ,  255 ,  255 ,  255},
 {  9 ,    8 ,    2 ,    9 ,    2 ,    1 ,    8 ,    7 ,    2 ,   10 ,    2 ,    5 ,    7 ,    5 ,    2 ,  255},
 {  1 ,    3 ,    5 ,    3 ,    7 ,    5 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255},
 {  0 ,    8 ,    7 ,    0 ,    7 ,    1 ,    1 ,    7 ,    5 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255},
 {  9 ,    0 ,    3 ,    9 ,    3 ,    5 ,    5 ,    3 ,    7 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255},
 {  9 ,    8 ,    7 ,    5 ,    9 ,    7 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255},
 {  5 ,    8 ,    4 ,    5 ,   10 ,    8 ,   10 ,   11 ,    8 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255},
 {  5 ,    0 ,    4 ,    5 ,   11 ,    0 ,    5 ,   10 ,   11 ,   11 ,    3 ,    0 ,  255 ,  255 ,  255 ,  255},
 {  0 ,    1 ,    9 ,    8 ,    4 ,   10 ,    8 ,   10 ,   11 ,   10 ,    4 ,    5 ,  255 ,  255 ,  255 ,  255},
 { 10 ,   11 ,    4 ,   10 ,    4 ,    5 ,   11 ,    3 ,    4 ,    9 ,    4 ,    1 ,    3 ,    1 ,    4 ,  255},
 {  2 ,    5 ,    1 ,    2 ,    8 ,    5 ,    2 ,   11 ,    8 ,    4 ,    5 ,    8 ,  255 ,  255 ,  255 ,  255},
 {  0 ,    4 ,   11 ,    0 ,   11 ,    3 ,    4 ,    5 ,   11 ,    2 ,   11 ,    1 ,    5 ,    1 ,   11 ,  255},
 {  0 ,    2 ,    5 ,    0 ,    5 ,    9 ,    2 ,   11 ,    5 ,    4 ,    5 ,    8 ,   11 ,    8 ,    5 ,  255},
 {  9 ,    4 ,    5 ,    2 ,   11 ,    3 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255},
 {  2 ,    5 ,   10 ,    3 ,    5 ,    2 ,    3 ,    4 ,    5 ,    3 ,    8 ,    4 ,  255 ,  255 ,  255 ,  255},
 {  5 ,   10 ,    2 ,    5 ,    2 ,    4 ,    4 ,    2 ,    0 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255},
 {  3 ,   10 ,    2 ,    3 ,    5 ,   10 ,    3 ,    8 ,    5 ,    4 ,    5 ,    8 ,    0 ,    1 ,    9 ,  255},
 {  5 ,   10 ,    2 ,    5 ,    2 ,    4 ,    1 ,    9 ,    2 ,    9 ,    4 ,    2 ,  255 ,  255 ,  255 ,  255},
 {  8 ,    4 ,    5 ,    8 ,    5 ,    3 ,    3 ,    5 ,    1 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255},
 {  0 ,    4 ,    5 ,    1 ,    0 ,    5 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255},
 {  8 ,    4 ,    5 ,    8 ,    5 ,    3 ,    9 ,    0 ,    5 ,    0 ,    3 ,    5 ,  255 ,  255 ,  255 ,  255},
 {  9 ,    4 ,    5 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255},
 {  4 ,   11 ,    7 ,    4 ,    9 ,   11 ,    9 ,   10 ,   11 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255},
 {  0 ,    8 ,    3 ,    4 ,    9 ,    7 ,    9 ,   11 ,    7 ,    9 ,   10 ,   11 ,  255 ,  255 ,  255 ,  255},
 {  1 ,   10 ,   11 ,    1 ,   11 ,    4 ,    1 ,    4 ,    0 ,    7 ,    4 ,   11 ,  255 ,  255 ,  255 ,  255},
 {  3 ,    1 ,    4 ,    3 ,    4 ,    8 ,    1 ,   10 ,    4 ,    7 ,    4 ,   11 ,   10 ,   11 ,    4 ,  255},
 {  4 ,   11 ,    7 ,    9 ,   11 ,    4 ,    9 ,    2 ,   11 ,    9 ,    1 ,    2 ,  255 ,  255 ,  255 ,  255},
 {  9 ,    7 ,    4 ,    9 ,   11 ,    7 ,    9 ,    1 ,   11 ,    2 ,   11 ,    1 ,    0 ,    8 ,    3 ,  255},
 { 11 ,    7 ,    4 ,   11 ,    4 ,    2 ,    2 ,    4 ,    0 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255},
 { 11 ,    7 ,    4 ,   11 ,    4 ,    2 ,    8 ,    3 ,    4 ,    3 ,    2 ,    4 ,  255 ,  255 ,  255 ,  255},
 {  2 ,    9 ,   10 ,    2 ,    7 ,    9 ,    2 ,    3 ,    7 ,    7 ,    4 ,    9 ,  255 ,  255 ,  255 ,  255},
 {  9 ,   10 ,    7 ,    9 ,    7 ,    4 ,   10 ,    2 ,    7 ,    8 ,    7 ,    0 ,    2 ,    0 ,    7 ,  255},
 {  3 ,    7 ,   10 ,    3 ,   10 ,    2 ,    7 ,    4 ,   10 ,    1 ,   10 ,    0 ,    4 ,    0 ,   10 ,  255},
 {  1 ,   10 ,    2 ,    8 ,    7 ,    4 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255},
 {  4 ,    9 ,    1 ,    4 ,    1 ,    7 ,    7 ,    1 ,    3 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255},
 {  4 ,    9 ,    1 ,    4 ,    1 ,    7 ,    0 ,    8 ,    1 ,    8 ,    7 ,    1 ,  255 ,  255 ,  255 ,  255},
 {  4 ,    0 ,    3 ,    7 ,    4 ,    3 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255},
 {  4 ,    8 ,    7 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255},
 {  9 ,   10 ,    8 ,   10 ,   11 ,    8 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255},
 {  3 ,    0 ,    9 ,    3 ,    9 ,   11 ,   11 ,    9 ,   10 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255},
 {  0 ,    1 ,   10 ,    0 ,   10 ,    8 ,    8 ,   10 ,   11 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255},
 {  3 ,    1 ,   10 ,   11 ,    3 ,   10 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255},
 {  1 ,    2 ,   11 ,    1 ,   11 ,    9 ,    9 ,   11 ,    8 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255},
 {  3 ,    0 ,    9 ,    3 ,    9 ,   11 ,    1 ,    2 ,    9 ,    2 ,   11 ,    9 ,  255 ,  255 ,  255 ,  255},
 {  0 ,    2 ,   11 ,    8 ,    0 ,   11 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255},
 {  3 ,    2 ,   11 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255},
 {  2 ,    3 ,    8 ,    2 ,    8 ,   10 ,   10 ,    8 ,    9 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255},
 {  9 ,   10 ,    2 ,    0 ,    9 ,    2 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255},
 {  2 ,    3 ,    8 ,    2 ,    8 ,   10 ,    0 ,    1 ,    8 ,    1 ,   10 ,    8 ,  255 ,  255 ,  255 ,  255},
 {  1 ,   10 ,    2 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255},
 {  1 ,    3 ,    8 ,    9 ,    1 ,    8 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255},
 {  0 ,    9 ,    1 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255},
 {  0 ,    3 ,    8 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255},
 {255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255 ,  255}};

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////


typedef struct cube
{
  float4 pos0;
  float4 pos1;
  float4 pos2;
  float4 pos3;
  float4 pos4;
  float4 pos5;
  float4 pos6;
  float4 pos7;

  float3 normal0;
  float3 normal1;
  float3 normal2;
  float3 normal3;
  float3 normal4;
  float3 normal5;
  float3 normal6;
  float3 normal7;
};

int calculate_case(float d0, float d1, float d2, float d3, float d4, float d5, float d6, float d7 , float isovalue)
{
  int result = 0;
  
  if (d7 < isovalue) { result += 128;} 
  if (d6 < isovalue) { result += 64;}
  if (d5 < isovalue) { result += 32;} 
  if (d4 < isovalue) { result += 16;} 
  if (d3 < isovalue) { result += 8; }
  if (d2 < isovalue) { result += 4; }
  if (d1 < isovalue) { result += 2; }
  if (d0 < isovalue) { result += 1; }
  
  return result;
}

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////

//float3 interpolateV(vec4 va, vec4 vb)
//{
//   if (abs(isovalue - va.w) < 0.00001) { return va.xyz; }
//   else if (abs(isovalue - vb.w) < 0.00001) { return vb.xyz; }
//   else if (abs(va.w-vb.w) < 0.00001) { return va.xyz; }
//   
//   else
//   {
//     vec3 p;
//     float mu = (isovalue - va.w) / (vb.w - va.w);
//     p.x = va.x + mu * (vb.x - va.x);
//     p.y = va.y + mu * (vb.y - va.y);
//     p.z = va.z + mu * (vb.z - va.z);
//     return p;
//   }
//}

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////

float3 calculate_position(int global_id, int x_offset, int y_offset, int y_dimension, int z_dimension, float block_size)
{
  const float x_coord = ((global_id % x_offset) - 1) * block_size;
  const float y_coord = (((global_id / x_offset) % (y_dimension + 2)) - 1) * block_size;
  const float z_coord = (((global_id / y_offset) % (z_dimension + 2)) - 1) * block_size;
  return (float3) { x_coord, y_coord, z_coord};  
}

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////

float3 calculate_normal(int index, int y_offset, int z_offset, __global float* base_values)
{
  //float d = 1.0 / voxels_per_block;
  float3 grad;
  float right = base_values[index-1]; 
  float left = base_values[index+1]; 
  float up = base_values[index+y_offset]; 
  float down = base_values[index-y_offset]; 
  float z = base_values[index+z_offset]; 
  float z_minus = base_values[index-z_offset]; 
  grad.x = right - left;
  grad.y = up - down;
  grad.z = z - z_minus;
  return normalize(grad); 
}

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////

float3 interpolateV(float4 va, float4 vb, float isovalue)
{
   if (fabs(isovalue - va.w) < 0.00001f) { return va.xyz; }
   else if (fabs(isovalue - vb.w) < 0.00001f) { return vb.xyz; }
   else if (fabs(va.w-vb.w) < 0.00001f) { return va.xyz; }
   
   else
   {
     float3 p;
     float mu = (isovalue - va.w) / (vb.w - va.w);
     p.x = va.x + mu * (vb.x - va.x);
     p.y = va.y + mu * (vb.y - va.y);
     p.z = va.z + mu * (vb.z - va.z);
     return p;
   }
}

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////

float3 interpolateN(float3 na, float3 nb, float densityA, float densityB, float isovalue)
{
   if (fabs(isovalue - densityA) < 0.00001) { return na; }
   else if (fabs(isovalue - densityB) < 0.00001) { return nb; }
   else if (fabs(densityA-densityB) < 0.00001) { return na; }
   
   else
   {
     float3 p;
     float mu = (isovalue - densityA) / (densityB - densityA);
     p.x = na.x + mu * (nb.x - na.x);
     p.y = na.y + mu * (nb.y - na.y);
     p.z = na.z + mu * (nb.z - na.z);
     return normalize(p);
   }
}

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////

void createVertex(int edgeValue, struct cube c)
{
//    // EDGE NUMBER 0
//    float iterator = 1.0 / 255.0;
//    if (edgeValue == 0.0) // < 0.000001 )
//    {
//      gl_Position =  vec4(interpolateV(c.v0, c.v1),1.0);
//
//        // Vertex v0 and v1 creates the edge e0. See cubes in the begining of this file.
//        // Find the actual point between v0 and v1 where the isovalue is located 
//        // by interpolation and create the vertex for triangle. 
//        // PHASE 5.
//        fPosIn = interpolateV(c.v0, c.v1);   
//        
//        // PHASE 6.
//        // Interpolate normales in the same way and create normal vetrex for triangle.
//        fNormalIn = interpolateN(c.n0, c.n1, c.v0.w, c.v1.w);
//
//      // Create vertex.
//      EmitVertex();
//    }           
//    // EDGE NUMBER 1
//    else if (abs(edgeValue - iterator) < 0.000001)
//    {
//
//      // PHASE 5.
//      gl_Position =  vec4(interpolateV(c.v1, c.v2),1.0);
//      fPosIn = interpolateV(c.v1, c.v2);
//
//      // PHASE 6.
//      fNormalIn = interpolateN(c.n1, c.n2, c.v1.w, c.v2.w);
//      EmitVertex();
//    }           
//    // EDGE NUMBER 2
//    else if (abs(edgeValue - iterator * 2.0) < 0.000001)
//    {
//      gl_Position =  vec4(interpolateV(c.v2, c.v3),1.0);
//
//      // PHASE 5.
//      fPosIn = interpolateV(c.v2, c.v3);
//
//      // PHASE 6.
//      fNormalIn = interpolateN(c.n2, c.n3, c.v2.w, c.v3.w);
//      EmitVertex();
//    }           
//    // EDGE NUMBER 3
//    else if (abs(edgeValue - iterator * 3.0) < 0.000001)
//    {
//      gl_Position =  vec4(interpolateV(c.v3, c.v0),1.0);
//
//      // PHASE 5.
//      fPosIn = interpolateV(c.v3, c.v0);
//
//      // PHASE 6.
//      fNormalIn = interpolateN(c.n3, c.n0, c.v3.w, c.v0.w);
//      EmitVertex();
//    }           
//    // EDGE NUMBER 4
//    else if (abs(edgeValue - iterator * 4.0) < 0.000001)
//    {
//      gl_Position =  vec4(interpolateV(c.v4, c.v5),1.0);
//
//      // PHASE 5.
//      fPosIn = interpolateV(c.v4, c.v5);
//
//      // PHASE 6.
//      fNormalIn = interpolateN(c.n4, c.n5, c.v4.w, c.v5.w);
//      EmitVertex();
//    }           
//    // EDGE NUMBER 5
//    else if (abs(edgeValue - iterator * 5.0) < 0.000001)
//    {
//      gl_Position =  vec4(interpolateV(c.v5, c.v6),1.0);
//
//      // PHASE 5.
//      fPosIn = interpolateV(c.v5, c.v6);
//
//      // PHASE 6.
//      fNormalIn = interpolateN(c.n5, c.n6, c.v5.w, c.v6.w);
//      EmitVertex();
//    }           
//    // EDGE NUMBER 6
//    else if (abs(edgeValue - iterator * 6.0) < 0.000001)
//    {
//      gl_Position =  vec4(interpolateV(c.v6, c.v7),1.0);
//
//      // PHASE 5.
//      fPosIn = interpolateV(c.v6, c.v7);
//
//      // PHASE 6.
//      fNormalIn = interpolateN(c.n6, c.n7, c.v6.w, c.v7.w);
//      EmitVertex();
//    }           
//    // EDGE NUMBER 7
//    else if (abs(edgeValue - iterator * 7.0) < 0.000001)
//    {
//      gl_Position =  vec4(interpolateV(c.v7, c.v4),1.0);
//
//      // PHASE 5.
//      fPosIn = interpolateV(c.v7, c.v4);
//
//      // PHASE 6.
//      fNormalIn = interpolateN(c.n7, c.n4, c.v7.w, c.v4.w);
//      EmitVertex();
//    }           
//    // EDGE NUMBER 8
//    else if (abs(edgeValue - iterator * 8.0) < 0.000001)
//    {
//      gl_Position =  vec4(interpolateV(c.v0, c.v4),1.0);
//
//      // PHASE 5.
//      fPosIn = interpolateV(c.v0, c.v4);
//
//      // PHASE 6.
//      fNormalIn = interpolateN(c.n0, c.n4, c.v0.w, c.v4.w);
//      EmitVertex();
//    }           
//    // EDGE NUMBER 9
//    else if (abs(edgeValue - iterator * 9.0) < 0.000001)
//    {
//      gl_Position =  vec4(interpolateV(c.v1, c.v5),1.0);
//
//      // PHASE 5.
//      fPosIn = interpolateV(c.v1, c.v5);
//
//      // PHASE 6.
//      fNormalIn = interpolateN(c.n1, c.n5, c.v1.w, c.v5.w);
//      EmitVertex();
//    }           
//    // EDGE NUMBER 10 
//    else if (abs(edgeValue - iterator * 10.0) < 0.000001)
//    {
//      gl_Position =  vec4(interpolateV(c.v2, c.v6),1.0);
//
//      // PHASE 5.
//      fPosIn = interpolateV(c.v2, c.v6);
//
//      // PHASE 6.
//      fNormalIn = interpolateN(c.n2, c.n6, c.v2.w, c.v6.w);
//      EmitVertex();
//    }           
//    // EDGE NUMBER 11 
//    else if (abs(edgeValue - iterator * 11.0) < 0.000001)
//    {
//      gl_Position =  vec4(interpolateV(c.v3, c.v7),1.0);
//
//      // PHASE 5
//      fPosIn = interpolateV(c.v3, c.v7);
//
//      // PHASE 6
//      fNormalIn = interpolateN(c.n3, c.n7, c.v3.w, c.v7.w);
//      EmitVertex();
//    }           
}
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////

__kernel void mc(__global __read_only float* base_values,
                          __global float4* output,
                          __global int* counterArg,       
                          int x_dimension,
                          int y_dimension,
                          int z_dimension,
                          float block_size,
                          float isovalue,
                          int n)
{
  const int global_id = get_global_id(0);
  volatile __global int* counterPtr = counterArg;
  
  if (global_id >= n) return;  
  
  const int x_offset = x_dimension + 2;
  const int y_offset = x_offset * (y_dimension + 2);

  float4 pos = (float4) {calculate_position(global_id, x_offset, y_offset, y_dimension, z_dimension, block_size), base_values[global_id]};

  // Check if the cube is in it's boundaries.
  if (!(pos.x < 0 || pos.x > x_dimension || pos.y < 0 || pos.y > y_dimension || pos.z  < 0 || pos.z  > z_dimension)) return;

  // Create the cube.
  //        v5                        v6
  //         +------------------------+
  //        /|                       /|
  //       / |                      / |
  //      /  |                     /  |
  //     /   |                    /   |  
  //    /    |                   /    |
  //v1 +------------------------+ v2  |
  //   |     |                  |     |
  //   |     |                  |     |
  //   |     |                  |     |
  //   |  v4 +------------------|-----+ v7
  //   |    /                   |    /
  //   |   /                    |   /
  //   |  /                     |  /    
  //   | /                      | /
  //   |/                       |/
  //   +------------------------+
  //  v0                       v3

  //float8 cube;
  //cube.s0 = base_values[global_id]; //v0
  //cube.s1 = base_values[global_id+x_offset]; //v1
  //cube.s2 = base_values[global_id+x_offset+1]; //v2
  //cube.s3 = base_values[global_id+1]; //v3
  //cube.s4 = base_values[global_id+y_offset]; //v4
  //cube.s5 = base_values[global_id+x_offset+y_offset]; //v5
  //cube.s6 = base_values[global_id+x_offset+y_offset+1]; //v6
  //cube.s7 = base_values[global_id+y_offset+1]; //v7


  int index1 = global_id+x_offset;
  int index2 = global_id+x_offset+1;
  int index3 = global_id+1;
  int index4 = global_id+y_offset;
  int index5 = global_id+x_offset+y_offset;
  int index6 = global_id+x_offset+y_offset+1;
  int index7 = global_id+y_offset+1;

  float v0_density = base_values[global_id]; //v0
  float v1_density = base_values[index1]; //v1
  float v2_density = base_values[index2]; //v2
  float v3_density = base_values[index3]; //v3
  float v4_density = base_values[index4]; //v4
  float v5_density = base_values[index5]; //v5
  float v6_density = base_values[index6]; //v6
  float v7_density = base_values[index7]; //v7

  // Calculate the cube case number.
  int cube_case = calculate_case(v0_density,
                                 v1_density,
                                 v2_density,
                                 v3_density,
                                 v4_density,
                                 v5_density,
                                 v6_density,
                                 v7_density,
                                 isovalue);

  // The cube doesn't produce any geometry.
  if (cube_case == 0 || cube_case == 255) return;

  struct cube c;

  c.pos0 = pos;  
  c.pos1 = (float4){ calculate_position(index1, x_offset, y_offset, y_dimension, z_dimension, block_size), v1_density}; 
  c.pos2 = (float4){ calculate_position(index2, x_offset, y_offset, y_dimension, z_dimension, block_size), v2_density}; 
  c.pos3 = (float4){ calculate_position(index3, x_offset, y_offset, y_dimension, z_dimension, block_size), v3_density}; 
  c.pos4 = (float4){ calculate_position(index4, x_offset, y_offset, y_dimension, z_dimension, block_size), v4_density}; 
  c.pos5 = (float4){ calculate_position(index5, x_offset, y_offset, y_dimension, z_dimension, block_size), v5_density}; 
  c.pos6 = (float4){ calculate_position(index6, x_offset, y_offset, y_dimension, z_dimension, block_size), v6_density}; 
  c.pos7 = (float4){ calculate_position(index7, x_offset, y_offset, y_dimension, z_dimension, block_size), v7_density}; 

  c.normal0 = calculate_normal(global_id, x_offset, y_offset, base_values);  
  c.normal1 = calculate_normal(index1, x_offset, y_offset, base_values); 
  c.normal2 = calculate_normal(index2, x_offset, y_offset, base_values); 
  c.normal3 = calculate_normal(index3, x_offset, y_offset, base_values); 
  c.normal4 = calculate_normal(index4, x_offset, y_offset, base_values); 
  c.normal5 = calculate_normal(index5, x_offset, y_offset, base_values); 
  c.normal6 = calculate_normal(index6, x_offset, y_offset, base_values); 
  c.normal7 = calculate_normal(index7, x_offset, y_offset, base_values); 

  char16 tri_case = triTable[cube_case];

  float4 f;
  f.x = global_id;
  f.y = counterPtr[0];
  f.z = 6.0;
  f.w = 1.0;
  int index = atomic_inc(counterPtr);
  output[index] = f; //base_points[global_id];                 
}                                                                               
